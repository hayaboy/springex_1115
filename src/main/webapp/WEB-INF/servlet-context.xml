<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 스프링 MVC 설정을 어노테이션 기반으로 처리한다는 의미와 스프링 MVC의 여러 객체들을 자동으로 스프링의 빈(Bean)으로 등록하게 하는 기능-->
    <mvc:annotation-driven></mvc:annotation-driven>

    <!-- 이미지나 html 파일과 같이 정적인 파일의 경로를 지정
    /resources 경로로 들어오는 요청은 정적 파일을 요구하는 것이고 스프링 MVC에서 처리하지 않는다는 의미 -->

 <!--
주어진 XML 코드는 Spring Framework에서 정적 자원(예: CSS, JavaScript, 이미지 파일 등)을 처리하기 위한 설정을 나타냅니다.
 <mvc:resources>는 이러한 정적 자원을 처리하기 위한 것이며, mapping 속성은 요청 경로를, location 속성은 실제 자원이 위치한 디렉토리를 나타냅니다.
mapping="/resources/**"에서 별표(*) 두 개는 와일드카드 패턴을 나타냅니다. 이 패턴은 /resources/ 다음에 어떤 경로가 오더라도 해당 패턴에 일치하게 됩니다.
 즉, /resources/css/style.css, /resources/js/script.js, /resources/images/logo.png와 같은 모든 요청이 이 패턴에 일치하게 됩니다.
따라서, <mvc:resources mapping="/resources/**" location="/resources/">는 "/resources/" 경로 이하의 모든 요청을 /resources/ 디렉토리에서 찾아
처리하도록 Spring에 알려주는 설정입니다.
    -->
    <mvc:resources mapping="/resources/**" location="/resources/"></mvc:resources>

    <context:component-scan base-package="org.zerock.springex.controller"></context:component-scan>


    <!--뷰리졸버 설정-->
    <!--InternalResourceViewResolver
    스프링 MVC에서 제공하는 뷰(view)를 어떻게 결정하는지에 대한 설정을 담당
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>






    <!--Formatter 관련 설정
    FormattingConversionServiceFactoryBean 객체를 스프링의 빈(Bean)으로 등록
    -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <set>
                <bean class="org.zerock.springex.formatter.LocalDateFormatter"></bean>
                <bean class="org.zerock.springex.formatter.CheckboxFormatter"/>
            </set>
        </property>
    </bean>

    <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>


</beans>